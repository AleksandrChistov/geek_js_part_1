// 2. Не выполняя кода, ответить, что выведет браузер и почему:

// при запуске кода браузер проанализирует и запишет все function declarations в переменные
// и переменные заданные с помощью ключевого слова var будут проанализированы и подняты вверх (hoisting)
// если ключа a нет в объекте window, то выполнить код
if (!("a" in window)) { // переменная a уже существует в глобальной области видимости
  var a = 1; // этот код не выполнится (но переменная a будет проинициализирована при запуске кода)
}
alert(a); // выведет undefined

// создаст новую функцию с именем a и присвоит её переменной b
var b = function a(x) {
    x && a(--x);
};
alert(a); // будет ошибка, так как такой переменной нет

// создаст новую функцию и присвоит её переменной a, которая была объявлена ниже
function a(x) {
    return x * 2;
}
var a; // объявление переменной поднимается при запуске кода (hoisting)
alert(a); // выведет функцию a

// создаст новую функцию и присвоит её переменной b
function b(x, y, a) {
    arguments[2] = 10; // меняем переменную a в массиве arguments
    alert(a); // выведет 10 - возьмет значение переменной по ссылке из массива arguments
}
b(1, 2, 3); // запускаем функцию b

// создаст новую функцию и присвоит её переменной a
function a() {
    alert(this); // выведет глобальный объект window, так как переменная a глобальная (window.a)
}
a.call(null); // метод call не будет менять this в случае передачи null
