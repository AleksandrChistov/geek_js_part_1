var FIELD_SIZE_X = 20;//—Å—Ç—Ä–æ–∫–∏
var FIELD_SIZE_Y = 20;//—Å—Ç–æ–ª–±—Ü—ã
var SNAKE_SPEED = 200; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è–º–∏ –∑–º–µ–π–∫–∏
var COUNT_NODE = null; // –¢–µ–≥ span –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Å—á–µ—Ç–∞
var snake = []; // –°–∞–º–∞ –∑–º–µ–π–∫–∞
var direction = 'y+'; // –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –∑–º–µ–π–∫–∏
var gameIsRunning = false; // –ó–∞–ø—É—â–µ–Ω–∞ –ª–∏ –∏–≥—Ä–∞
var snake_timer; // –¢–∞–π–º–µ—Ä –∑–º–µ–π–∫–∏
var bomb_timer; // –¢–∞–π–º–µ—Ä –±–æ–º–±—ã
var score = 0; // –†–µ–∑—É–ª—å—Ç–∞—Ç

function init() {
    prepareGameField(); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª—è

    var wrap = document.getElementsByClassName('wrap')[0];
    wrap.style.width = '400px';

    // –°–æ–±—ã—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –°—Ç–∞—Ä—Ç –∏ –ù–æ–≤–∞—è –∏–≥—Ä–∞
    document.getElementById('snake-start').addEventListener('click', startGame);
    document.getElementById('snake-renew').addEventListener('click', refreshGame);

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏—à –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    addEventListener('keydown', changeDirection);
}

/**
 * –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
 */
function prepareGameField() {
    // –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É
    var game_table = document.createElement('table');
    game_table.setAttribute('class', 'game-table');

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —è—á–µ–µ–∫ –∏–≥—Ä–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã
    for (var i = 0; i < FIELD_SIZE_X; i++) {
        // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
        var row = document.createElement('tr');
        row.className = 'game-table-row row-' + i;

        for (var j = 0; j < FIELD_SIZE_Y; j++) {
            // –°–æ–∑–¥–∞–Ω–∏–µ —è—á–µ–π–∫–∏
            var cell = document.createElement('td');
            cell.className = 'game-table-cell cell-' + i + '-' + j;

            row.appendChild(cell); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —è—á–µ–π–∫–∏
        }
        game_table.appendChild(row); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
    }

    // –Ω–∞—Ö–æ–¥–∏–º —Ç–µ–≥ –∏ –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    COUNT_NODE = document.getElementsByClassName('count__number')[0];
    COUNT_NODE.textContent = score.toString();

    document.getElementById('snake-field').appendChild(game_table); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
}

/**
 * –°—Ç–∞—Ä—Ç –∏–≥—Ä—ã
 */
function startGame() {
    gameIsRunning = true;
    respawn();//—Å–æ–∑–¥–∞–ª–∏ –∑–º–µ–π–∫—É

    snake_timer = setInterval(move, SNAKE_SPEED);//–∫–∞–∂–¥—ã–µ SNAKE_SPEED –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é move
    bomb_timer = setInterval(createBomb, 4000);//–∫–∞–∂–¥—ã–µ 4—Å –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é createBomb
    setTimeout(createFood, 5000);
}

/**
 * –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∑–º–µ–π–∫–∏ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ
 */
function respawn() {
    // –ó–º–µ–π–∫–∞ - –º–∞—Å—Å–∏–≤ td
    // –°—Ç–∞—Ä—Ç–æ–≤–∞—è –¥–ª–∏–Ω–∞ –∑–º–µ–π–∫–∏ = 2

    // Respawn –∑–º–µ–π–∫–∏ –∏–∑ —Ü–µ–Ω—Ç—Ä–∞
    var start_coord_x = Math.floor(FIELD_SIZE_X / 2);
    var start_coord_y = Math.floor(FIELD_SIZE_Y / 2);

    // –ì–æ–ª–æ–≤–∞ –∑–º–µ–π–∫–∏
    var snake_head = document.getElementsByClassName('cell-' + start_coord_y + '-' + start_coord_x)[0];
    snake_head.classList.add('snake-unit');
    // –¢–µ–ª–æ –∑–º–µ–π–∫–∏
    var snake_tail = document.getElementsByClassName('cell-' + (start_coord_y - 1) + '-' + start_coord_x)[0];
    snake_tail.classList.add('snake-unit');

    snake.push(snake_head);
    snake.push(snake_tail);
}

/**
 * –î–≤–∏–∂–µ–Ω–∏–µ –∑–º–µ–π–∫–∏
 */
function move() {
    // –°–±–æ—Ä–∫–∞ –∫–ª–∞—Å—Å–æ–≤ —Å –≥–æ–ª–æ–≤—ã –∑–º–µ–π–∫–∏
    var snake_head_classes = snake[snake.length - 1].getAttribute('class').split(' ');

    // –°–¥–≤–∏–≥ –≥–æ–ª–æ–≤—ã
    var snake_coords = snake_head_classes[1].split('-');//–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–ª–∏ —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤
    var coord_y = parseInt(snake_coords[1]);
    var coord_x = parseInt(snake_coords[2]);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤—É—é —Ç–æ—á–∫—É
    var new_unit = setNewPoint(coord_y, coord_x);

    // –ø—Ä–æ–≤–µ—Ä–∫–∞ new_unit –Ω–µ —á–∞—Å—Ç—å –∑–º–µ–π–∫–∏
    if (!isSnakeUnit(new_unit)) {

        // –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ new_unit –±–æ–º–±—É
        if (haveBomb(new_unit)) {
            finishTheGame();
            return;
        }

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —á–∞—Å—Ç–∏ –∑–º–µ–π–∫–∏
        new_unit.classList.add('snake-unit');
        snake.push(new_unit);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–¥–æ –ª–∏ —É–±—Ä–∞—Ç—å —Ö–≤–æ—Å—Ç
        if (!haveFood(new_unit)) {
            // –ù–∞—Ö–æ–¥–∏–º —Ö–≤–æ—Å—Ç
            var removed = snake.splice(0, 1)[0];
            var classes = removed.getAttribute('class').split(' ');

            // —É–¥–∞–ª—è–µ–º —Ö–≤–æ—Å—Ç
            removed.setAttribute('class', classes[0] + ' ' + classes[1]);
        }
    }
    else {
        finishTheGame();
    }
}

function setNewPoint(coord_y, coord_x) {
    var new_unit;

    if (direction == 'x-') {
        new_unit = document.getElementsByClassName('cell-' + (coord_y) + '-' + (coord_x - 1))[0];

        if (new_unit === undefined) {
            new_unit = document.getElementsByClassName('cell-' + (coord_y) + '-' + (FIELD_SIZE_X - 1))[0];
        }
    }
    else if (direction == 'x+') {
        new_unit = document.getElementsByClassName('cell-' + (coord_y) + '-' + (coord_x + 1))[0];

        if (new_unit === undefined) {
            new_unit = document.getElementsByClassName('cell-' + (coord_y) + '-' + (0))[0];
        }
    }
    else if (direction == 'y+') {
        new_unit = document.getElementsByClassName('cell-' + (coord_y - 1) + '-' + (coord_x))[0];

        if (new_unit === undefined) {
            new_unit = document.getElementsByClassName('cell-' + (FIELD_SIZE_Y - 1) + '-' + (coord_x))[0];
        }
    }
    else if (direction == 'y-') {
        new_unit = document.getElementsByClassName('cell-' + (coord_y + 1) + '-' + (coord_x))[0];

        if (new_unit === undefined) {
            new_unit = document.getElementsByClassName('cell-' + (0) + '-' + (coord_x))[0];
        }
    }

    return new_unit;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–º–µ–π–∫—É
 * @param unit
 * @returns {boolean}
 */
function isSnakeUnit(unit) {
    var check = false;

    if (snake.includes(unit)) {
        check = true;
    }
    return check;
}

/**
 * –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –µ–¥—É
 * @param unit
 * @returns {boolean}
 */
function haveFood(unit) {
    var check = false;

    var unit_classes = unit.getAttribute('class');

    // –ï—Å–ª–∏ –µ–¥–∞
    if (unit_classes.includes('food-unit')) {
        check = true;
        createFood();

        score++;
        COUNT_NODE.textContent = score.toString();
    }
    return check;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–æ–º–±—É
 * @param unit
 * @returns {boolean}
 */
function haveBomb(unit) {
    var check = false;

    if (unit.textContent === 'üí£') {
        return true;
    }

    return check;
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –µ–¥—ã
 */
function createFood() {
    var foodCreated = false;

    while (!foodCreated) { //–ø–æ–∫–∞ –µ–¥—É –Ω–µ —Å–æ–∑–¥–∞–ª–∏
        var cell = getRandomCell();

        // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–º–µ–π–∫—É –∏ –±–æ–º–±—É
        if (!cell.classes.includes('snake-unit') && !cell.classes.includes('bomb-unit')) {
            cell.el.setAttribute('class', cell.classes + ' food-unit');
            foodCreated = true;
        }
    }
}

function createBomb() {
    var bombCreated = false;

    while (!bombCreated) { //–ø–æ–∫–∞ –±–æ–º–±—É –Ω–µ —Å–æ–∑–¥–∞–ª–∏
        var cell = getRandomCell();

        // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–º–µ–π–∫—É –∏ –µ–¥—É
        if (!cell.classes.includes('snake-unit') && !cell.classes.includes('food-unit')) {
            cell.el.setAttribute('class', cell.classes + ' bomb-unit');
            cell.el.innerHTML = '&#128163;';
            bombCreated = true;
        }
    }
}

function getRandomCell() {
    // —Ä–∞–Ω–¥–æ–º
    var x = Math.floor(Math.random() * FIELD_SIZE_X);
    var y = Math.floor(Math.random() * FIELD_SIZE_Y);

    var cell = document.getElementsByClassName('cell-' + y + '-' + x)[0];
    var cell_classes = cell.getAttribute('class');

    return {
        el: cell,
        classes: cell_classes
    };
}

/**
 * –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –∑–º–µ–π–∫–∏
 * @param e - —Å–æ–±—ã—Ç–∏–µ
 */
function changeDirection(e) {
	switch (e.keyCode) {
    case 37: // –ö–ª–∞–≤–∏—à–∞ –≤–ª–µ–≤–æ
        if (direction != 'x+') {
            direction = 'x-'
        }
        break;
    case 38: // –ö–ª–∞–≤–∏—à–∞ –≤–≤–µ—Ä—Ö
        if (direction != 'y-') {
            direction = 'y+'
        }
        break;
    case 39: // –ö–ª–∞–≤–∏—à–∞ –≤–ø—Ä–∞–≤–æ
        if (direction != 'x-') {
            direction = 'x+'
        }
        break;
    case 40: // –ö–ª–∞–≤–∏—à–∞ –≤–Ω–∏–∑
        if (direction != 'y+') {
            direction = 'y-'
        }
        break;
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
 */
function finishTheGame() {
    gameIsRunning = false;
    clearInterval(snake_timer);
    clearInterval(bomb_timer);
    alert('–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ' + score.toString());
}

/**
 * –ù–æ–≤–∞—è –∏–≥—Ä–∞
 */
function refreshGame() {
    location.reload();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
window.onload = init;